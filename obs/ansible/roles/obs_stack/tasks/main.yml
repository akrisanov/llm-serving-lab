- name: Import validation tasks
  ansible.builtin.import_tasks: validate.yml
  tags: [validate]

- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
    owner: ubuntu
    group: ubuntu
  loop:
    - /opt/obs
    - /opt/obs/grafana/provisioning/datasources
    - /opt/obs/grafana/provisioning/dashboards
    - /opt/obs/grafana/dashboards
    - /opt/obs/clickhouse/init
    - /opt/obs/gateway

- name: Ship Docker Compose file
  ansible.builtin.copy:
    src: "{{ config_path | default(playbook_dir + '/../../config') }}/docker-compose.yml"
    dest: /opt/obs/docker-compose.yml
    mode: "0644"
    owner: ubuntu
    group: ubuntu

- name: Ship OTel gateway config
  ansible.builtin.copy:
    src: "{{ config_path | default(playbook_dir + '/../../config') }}/otel/collector-gateway.yaml"
    dest: /opt/obs/gateway/otel-collector-gateway.yaml
    mode: "0644"
    owner: ubuntu
    group: ubuntu

- name: Ship Grafana datasource provisioning
  ansible.builtin.template:
    src: "{{ config_path | default(playbook_dir + '/../../config') }}/grafana/provisioning-datasource.yaml"
    dest: /opt/obs/grafana/provisioning/datasources/clickhouse.yaml
    mode: "0644"
    owner: ubuntu
    group: ubuntu

- name: Ship Grafana dashboards provisioning
  ansible.builtin.copy:
    src: "{{ config_path | default(playbook_dir + '/../../config') }}/grafana/provisioning-dashboards.yaml"
    dest: /opt/obs/grafana/provisioning/dashboards/all.yaml
    mode: "0644"
    owner: ubuntu
    group: ubuntu

- name: Ship dashboards
  ansible.builtin.copy:
    src: "{{ (obs_path | default(playbook_dir + '/../..')) }}/dashboards/"
    dest: /opt/obs/grafana/dashboards/
    mode: "0644"
    owner: ubuntu
    group: ubuntu

- name: Ship ClickHouse init SQL
  ansible.builtin.template:
    src: "{{ (obs_path | default(playbook_dir + '/../..')) }}/sql/001-users-and-db.sql.j2"
    dest: /opt/obs/clickhouse/init/001-users-and-db.sql
    mode: "0644"
    owner: ubuntu
    group: ubuntu

- name: Create .env for container stack
  ansible.builtin.copy:
    dest: /opt/obs/.env
    mode: "0644"
    owner: ubuntu
    group: ubuntu
    content: |
      CH_USER={{ ch_user }}
      CH_PASSWORD={{ ch_password }}
      CH_DB={{ ch_db }}
      CH_HTTP_PORT={{ ch_http_port }}
      CH_NATIVE_PORT={{ ch_native_port }}

      GRAFANA_ADMIN_USER={{ grafana_admin_user }}
      GRAFANA_ADMIN_PASSWORD={{ grafana_admin_password }}
      GRAFANA_PORT={{ grafana_port }}

      # Container versions
      CLICKHOUSE_VERSION={{ clickhouse_version }}
      OTEL_COLLECTOR_VERSION={{ otel_collector_version }}
      GRAFANA_VERSION={{ grafana_version }}

      CH_HTTP_URL=http://clickhouse:8123
      CH_NATIVE_TCP=clickhouse:9000
      OTEL_GATEWAY_OTLP_GRPC_PORT={{ otel_grpc_port }}
      OTEL_GATEWAY_OTLP_HTTP_PORT={{ otel_http_port }}

- name: Bring up the stack
  ansible.builtin.shell: |
    cd /opt/obs
    sudo -u ubuntu docker compose up -d
  args:
    chdir: /opt/obs
  register: obs_stack_docker_compose_result
  changed_when: "'Started' in obs_stack_docker_compose_result.stderr or 'Created' in obs_stack_docker_compose_result.stderr"
  tags: [deploy]
  notify: restart stack
