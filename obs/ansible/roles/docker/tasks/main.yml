- name: Install prerequisites
  ansible.builtin.apt:
    name: [apt-transport-https, ca-certificates, curl, gnupg, lsb-release]
    state: present
    update_cache: true

- name: Install Docker
  ansible.builtin.apt:
    name: "{{ docker_pkg }}"
    state: present

- name: Enable and start Docker
  ansible.builtin.systemd:
    name: docker
    enabled: true
    state: started

- name: Try install docker compose plugin via apt
  ansible.builtin.apt:
    name: docker-compose-plugin
    state: present
    update_cache: true
  register: docker_compose_apt
  failed_when: false

- name: Set Compose v2 download URL per arch (fallback)
  ansible.builtin.set_fact:
    docker_compose_url: "https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-{{ 'aarch64' if ansible_architecture in ['aarch64', 'arm64'] else 'x86_64' }}"
  when: docker_compose_apt.failed | default(false) or ('No package matching' in (docker_compose_apt.msg | default('')))

- name: Ensure cli-plugins dir exists (fallback)
  ansible.builtin.file:
    path: /usr/local/lib/docker/cli-plugins
    state: directory
    mode: "0755"
    owner: root
    group: root
  when: docker_compose_apt.failed | default(false) or ('No package matching' in (docker_compose_apt.msg | default('')))

- name: Download Docker Compose v2 binary to cli-plugins (fallback)
  ansible.builtin.get_url:
    url: "{{ docker_compose_url }}"
    dest: /usr/local/lib/docker/cli-plugins/docker-compose
    mode: "0755"
    owner: root
    group: root
  when: docker_compose_apt.failed | default(false) or ('No package matching' in (docker_compose_apt.msg | default('')))

- name: Verify docker compose v2 is available
  ansible.builtin.command: docker compose version
  register: compose_version
  changed_when: false
  when: docker_compose_apt.failed | default(false) or ('No package matching' in (docker_compose_apt.msg | default('')))
